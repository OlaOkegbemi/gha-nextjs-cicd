name: CD
on:
  push:
    branches: [main]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  create-version-pr-or-release:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changesets.outputs.hasChangesets == 'false' }} # if you'd like to deploy anytime code is pushed into main, without having a changesets
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Create version PR or Github Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset tag # creates a release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo '${{ toJSON(steps.changesets.outputs) }}'
      - name: Set Release Version
        id: get-version
        run: echo "::version=:${{ steps.changesets.outputs.publishedPackages[0] }}" >> $GITHUB_OUTPUT
  run-tests:
    needs: create-version-pr-or-release
    if: needs.create-version-pr-or-release.outputs.should-deploy == 'true'
    uses: "./.github/workflows/test.yaml"
    secrets: inherit
  deploy-to-staging:
    needs: run-tests
    uses: "./.github/workflows/deploy.yaml"
    secrets: inherit
    with:
      aws-env: ${{ vars.AWS_EB_STAGING_ENV }}
      github-env: "staging"
  deploy-to-production:
    needs: run-tests
    uses: "./.github/workflows/deploy.yaml"
    secrets: inherit
    with:
      aws-env: ${{ vars.AWS_EB_PRODUCTION_ENV }}
      github-env: "production"
